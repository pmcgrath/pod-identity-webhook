# Comments are formatted for https://github.com/norwoodj/helm-docs so we can include in the README.md

webhook:
  awsRegion: eu-west-1
  grafanaDashboards:
    # -- Assumes Grafana dashboard loading from a configmap is enabled and the label value matches the importLabelValue
    enabled: false
    # -- Will set the configmap grafana_dashboard label to this value
    importLabelValue: "1"
  hpa:
    # -- Assumes resource metrics are available
    enabled: false
    maxReplicas: 4
    minReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  image:
    # -- See https://hub.docker.com/r/amazon/amazon-eks-pod-identity-webhook/tags
    repository: amazon/amazon-eks-pod-identity-webhook
    tag: v0.3.0
  imagePullPolicy: IfNotPresent
  networkPolicy:
    # -- Enable NetworkPolicy - will create one that allows the kube-system api-server to hit the webhook and prometheus to scrape metrics
    enabled: false
    metricsScrapingSource:
      podLabels:
        app.kubernetes.io/name: prometheus
      namespace: monitoring
  nodeSelector: {}
  pdb:
    enabled: false
    maxUnavailable: 1
    minAvailable:
  priorityClassName: system-node-critical
  # -- Will use this for the liveness and readiness probes, allowing time for the secret creation job to populate the k8s TLS secret and the patch job to update the webhook's caBundle
  probesInitialDelaySeconds: 5
  replicaCount: 2
  resources:
    limits:
      cpu: 20m
      memory: 50Mi
    requests:
      cpu: 20m
      memory: 50Mi
  serviceMonitor:
    # -- For this to be effective the Prometheus operator's ServiceNonitor CRD must exist, will use Helm's .Capabilities.APIVersions.Has "monitoring.coreos.com/v1" check
    enabled: false
  tolerations: []
  # -- See https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []


# Config for mutating webhook - including its TLS config
webhookAdmission:
  # -- Danger if you set to Fail may block pod creations unless the target service is healthy
  failurePolicy: Fail
  # -- See https://github.com/kubernetes/ingress-nginx/blob/main/charts/ingress-nginx/values.yaml
  image:
    repository: k8s.gcr.io/ingress-nginx/kube-webhook-certgen
    tag: v1.1.1
  imagePullPolicy: IfNotPresent
  nodeSelector: {}
  priorityClassName: system-node-critical
  # -- Have found setting this to very low values delays the pod creation and startup time, ingress-nginx does not set these, these are reasonable defaults
  resources:
    limits:
      cpu: 15m
      memory: 20Mi
    requests:
      cpu: 15m
      memory: 20Mi
  # -- Need to use v1beta1 as the AWS image implementation returns v1beta1 responses, see https://github.com/aws/amazon-eks-pod-identity-webhook/issues/132
  reviewVersions:
  - v1beta1
  tolerations: []
